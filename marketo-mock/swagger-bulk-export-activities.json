{
  "swagger": "2.0",
  "info": {
    "description": "Marketo Rest API",
    "version": "1.0",
    "title": "Marketo Rest API",
    "termsOfService": "https://www.marketo.com/company/legal/",
    "contact": {
      "name": "Marketo Developer Relations",
      "url": "http://developers.marketo.com",
      "email": "developerfeedback@marketo.com"
    },
    "license": {
      "name": "API License Agreement",
      "url": "http://developers.marketo.com/api-license/"
    }
  },
  "host": "127.0.0.1:4011",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "tags": [],
  "paths": {
    "/bulk/v1/activities/export.json": {
      "get": {
        "tags": [
          "Bulk Export Activities"
        ],
        "summary": "Get Export Activity Jobs",
        "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Activity",
        "operationId": "getExportActivitiesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Comma separated list of statuses to filter on.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "queued",
              "processing",
              "cancelled",
              "completed",
              "failed"
            ]
          },
          {
            "name": "batchSize",
            "in": "query",
            "description": "The batch size to return. The max and default value is 300.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nextPageToken",
            "in": "query",
            "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseOfExportResponseWithToken"
            },
            "examples": {
              "success": {
                "errors": [],
                "nextPageToken": "l",
                "requestId": "abc123",
                "result": [
                  {
                    "exportId": "exportId1",
                    "status": "created",
                    "fileChecksum": "2cc8a71175134471baa9f0c07585718ec1ed717feb9f0d888494cb1255b0ecc2  result-123.csv",
                    "format": "CSV",
                    "fileSize": 1024,
                    "errorMsg": "in",
                    "startedAt": "1986-10-11T00:00:00.0Z",
                    "queuedAt": "1956-08-25T04:00:00.0Z",
                    "createdAt": "1975-08-18T04:00:00.0Z",
                    "finishedAt": "1946-02-18T05:00:00.0Z",
                    "numberOfRecords": -8791579738447454000
                  }
                ],
                "success": true,
                "warnings": []
              },
              "success-warning": {
                "errors": [],
                "nextPageToken": "l",
                "requestId": "abc123",
                "result": [
                  {
                    "exportId": "exportId1",
                    "status": "created",
                    "fileChecksum": "2cc8a71175134471baa9f0c07585718ec1ed717feb9f0d888494cb1255b0ecc2  result-123.csv",
                    "format": "CSV",
                    "fileSize": 1024,
                    "errorMsg": "in",
                    "startedAt": "1986-10-11T00:00:00.0Z",
                    "queuedAt": "1956-08-25T04:00:00.0Z",
                    "createdAt": "1975-08-18T04:00:00.0Z",
                    "finishedAt": "1946-02-18T05:00:00.0Z",
                    "numberOfRecords": -8791579738447454000
                  }
                ],
                "success": true,
                "warnings": [
                  {
                    "code": -998873391,
                    "message": "quis magna incididunt"
                  },
                  {
                    "code": 118841440,
                    "message": "cupidatat laboris ni"
                  },
                  {
                    "code": -1111912350,
                    "message": "fugiat officia Ut ut"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/bulk/v1/activities/export/create.json": {
      "post": {
        "tags": [
          "Bulk Export Activities"
        ],
        "summary": "Create Export Activity Job",
        "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Activities endpoints.  Use Enqueue Export Activity Job endpoint to queue the export job for processing.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity",
        "operationId": "createExportActivitiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "exportActivityRequest",
            "description": "exportActivityRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of field and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"primaryAttributeValueId\":\"Attribute ID\",<br>  \"primaryAttributeValue\":\"Attribute Value\",<br>  \"attributes\":\"Secondary Attributes\"<br>}</code><br>",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExportActivityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseOfExportResponse"
            },
            "examples": {
              "full-lifecycle": {
                "errors": [],
                "warnings": [],
                "requestId": "e42b#14272d07d78",
                "success": true,
                "result": [
                   {
                      "exportId": "ce45a7a1-f19d-4ce2-882c-a3c795940a7d",
                      "status": "Created",
                      "createdAt": "2017-01-21T11:47:30-08:00",
                      "queuedAt": "2017-01-21T11:48:30-08:00",
                      "format": "CSV"
                   }
                ]
             }
            }
          }
        }
      }
    },
    "/bulk/v1/activities/export/{exportId}/cancel.json": {
      "post": {
        "tags": [
          "Bulk Export Activities"
        ],
        "summary": "Cancel Export Activity Job",
        "description": "Cancel export job.  Required Permissions: Read-Only Activity",
        "operationId": "cancelExportActivitiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "Id of export batch job.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseOfExportResponse"
            }
          }
        }
      }
    },
    "/bulk/v1/activities/export/{exportId}/enqueue.json": {
      "post": {
        "tags": [
          "Bulk Export Activities"
        ],
        "summary": "Enqueue Export Activity Job",
        "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity",
        "operationId": "enqueueExportActivitiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "Id of export batch job.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseOfExportResponse"
            },
            "examples": {
              "full-lifecycle": {
                "errors": [],
                "warnings": [],
                "requestId": "e42b#14272d07d78",
                "success": true,
                "result": [
                   {
                      "exportId": "ce45a7a1-f19d-4ce2-882c-a3c795940a7d",
                      "status": "Queued",
                      "createdAt": "2017-01-21T11:47:30-08:00",
                      "queuedAt": "2017-01-21T11:48:30-08:00",
                      "format": "CSV"
                   }
                ]
             }              
            }
          }
        }
      }
    },
    "/bulk/v1/activities/export/{exportId}/file.json": {
      "get": {
        "tags": [
          "Bulk Export Activities"
        ],
        "summary": "Get Export Activity File",
        "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity<br><br>The file format is specified by calling the Create Export Activity Job endpoint. The following is an example of the default file format (\"CSV\"). Note that the \"attributes\" field is formatted as JSON.<br><br><code>marketoGUID,leadId,activityDate,activityTypeId,campaignId,primaryAttributeValueId,primaryAttributeValue, attributes</code><br><code>122323,6,2013-09-26T06:56:35+0000,12,11,6,Owyliphys Iledil,[{\"name\":\"Source Type\",\"value\":\"Web page visit\"}]</code>",
        "operationId": "getExportActivitiesFileUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "Id of export batch job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Range",
            "in": "header",
            "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "text/plain": "marketoGUID,leadId,activityDate,activityTypeId,campaignId,primaryAttributeValueId,primaryAttributeValue,attributes\n122323,6,2013-09-26T06:56:35+0000,12,11,6,Owyliphys Iledil,[{\"name\":\"Source Type\",\"value\":\"Web page visit\"}]\n"
            }
          }
        }
      }
    },
    "/bulk/v1/activities/export/{exportId}/status.json": {
      "get": {
        "tags": [
          "Bulk Export Activities"
        ],
        "summary": "Get Export Activity Job Status",
        "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Activity",
        "operationId": "getExportActivitiesStatusUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "exportId",
            "in": "path",
            "description": "Id of export batch job.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseOfExportResponse"
            },
            "examples": {
              "full-lifecycle": {
                "errors": [],
                "warnings": [],
                "requestId": "e42b#14272d07d78",
                "success": true,
                "result": [
                   {
                      "exportId": "ce45a7a1-f19d-4ce2-882c-a3c795940a7d",
                      "status": "Created",
                      "createdAt": "2017-01-21T11:47:30-08:00",
                      "queuedAt": "2017-01-21T11:48:30-08:00",
                      "format": "CSV"
                   }
                ]
             },
             "full-lifecycle-processing": {
                "errors": [],
                "warnings": [],
                "requestId": "e42b#14272d07d78",
                "success": true,
                "result": [
                  {
                      "exportId": "ce45a7a1-f19d-4ce2-882c-a3c795940a7d",
                      "status": "Processing",
                      "createdAt": "2017-01-21T11:47:30-08:00",
                      "queuedAt": "2017-01-21T11:48:30-08:00",
                      "format": "CSV"
                  }
                ]
             },             
             "full-lifecycle-completed": {
                "errors": [],
                "warnings": [],
                "requestId": "e42b#14272d07d78",
                "success": true,
                "result": [
                  {
                      "exportId": "ce45a7a1-f19d-4ce2-882c-a3c795940a7d",
                      "status": "Completed",
                      "createdAt": "2017-01-21T11:47:30-08:00",
                      "queuedAt": "2017-01-21T11:48:30-08:00",
                      "format": "CSV"
                  }
                ]
             }             
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ResponseOfActivity": {
      "type": "object",
      "required": [
        "errors",
        "requestId",
        "result",
        "success",
        "warnings"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array of errors that occurred if the request was unsuccessful",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "moreResult": {
          "type": "boolean",
          "example": false,
          "description": "Boolean indicating if there are more results in subsequent pages"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Paging token given if the result set exceeded the allowed batch size"
        },
        "requestId": {
          "type": "string",
          "description": "Id of the request made"
        },
        "result": {
          "type": "array",
          "description": "Array of results for individual records in the operation, may be empty",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "Whether the request succeeded"
        },
        "warnings": {
          "type": "array",
          "description": "Array of warnings given for the operation",
          "items": {
            "$ref": "#/definitions/Warning"
          }
        }
      }
    },
    "ActivityType": {
      "type": "object",
      "required": [
        "attributes",
        "id",
        "name",
        "primaryAttribute"
      ],
      "properties": {
        "apiName": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "description": "List of secondary attributes of the type",
          "items": {
            "$ref": "#/definitions/ActivityTypeAttribute"
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the activity type"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the activity type"
        },
        "name": {
          "type": "string",
          "description": "Name of the activity type"
        },
        "primaryAttribute": {
          "description": "Primary attribute of the type",
          "$ref": "#/definitions/ActivityTypeAttribute"
        }
      }
    },
    "ActivityTypeAttribute": {
      "type": "object",
      "required": [
        "dataType",
        "name"
      ],
      "properties": {
        "apiName": {
          "type": "string"
        },
        "dataType": {
          "type": "string",
          "description": "Datatype of the Attribute"
        },
        "name": {
          "type": "string",
          "description": "Name of the attribute"
        }
      }
    },
    "InputStream": {
      "type": "object"
    },
    "LeadAttribute2SearchableFields": {
      "type": "array",
      "description": "List of searchable fields",
      "items": {
        "type": "string",
        "description": "Searchable field"
      }
    },
    "LeadAttribute2Fields": {
      "type": "object",
      "required": [
        "name",
        "displayName",
        "dataType",
        "updateable",
        "crmManaged"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "REST API name of field"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of field (friendly name)"
        },
        "dataType": {
          "type": "string",
          "description": "Data type of field"
        },
        "length": {
          "type": "integer",
          "description": "Length of field"
        },
        "updateable": {
          "type": "boolean",
          "description": "Is field updateable"
        },
        "crmManaged": {
          "type": "boolean",
          "description": "Is field managed by CRM"
        }
      }
    },
    "LeadAttribute2Fields2": {
      "type": "object",
      "required": [
        "name",
        "displayName",
        "dataType",
        "updateable",
        "crmManaged"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "REST API name of field"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of field (friendly name)"
        },
        "dataType": {
          "type": "string",
          "description": "Data type of field"
        },
        "length": {
          "type": "integer",
          "description": "Length of field"
        },
        "updateable": {
          "type": "boolean",
          "description": "Is field updateable"
        },
        "crmManaged": {
          "type": "boolean",
          "description": "Is field managed by CRM"
        }
      }
    },
    "Attribute": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "apiName": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the attribute"
        },
        "value": {
          "type": "object",
          "description": "Value of the attribute"
        }
      },
      "description": "Name-Value pair"
    },
    "DateRange": {
      "type": "object",
      "properties": {
        "endAt": {
          "type": "string",
          "description": "End of date range filter (ISO 8601-format)"
        },
        "startAt": {
          "type": "string",
          "description": "Start of date range filter (ISO-8601 format)"
        }
      }
    },
    "ImportCustomObjectResponse": {
      "type": "object",
      "required": [
        "batchId",
        "objectApiName",
        "operation",
        "status"
      ],
      "properties": {
        "batchId": {
          "type": "integer",
          "format": "int32",
          "description": "Unique integer id of the import batch"
        },
        "importTime": {
          "type": "string",
          "description": "Time spent on the batch"
        },
        "message": {
          "type": "string",
          "description": "Status message of the batch"
        },
        "numOfObjectsProcessed": {
          "type": "integer",
          "format": "int32",
          "description": "Number of rows processed so far"
        },
        "numOfRowsFailed": {
          "type": "integer",
          "format": "int32",
          "description": "Number of rows failed so far"
        },
        "numOfRowsWithWarning": {
          "type": "integer",
          "format": "int32",
          "description": "Number of rows with a warning so far"
        },
        "objectApiName": {
          "type": "string",
          "description": "Object API Name"
        },
        "operation": {
          "type": "string",
          "description": "Bulk operation type. Can be import or export"
        },
        "status": {
          "type": "string",
          "description": "Status of the batch"
        }
      },
      "description": "Response containing import status information"
    },
    "ImportProgramMemberResponse": {
      "type": "object",
      "required": [
        "batchId",
        "importId",
        "status"
      ],
      "properties": {
        "batchId": {
          "type": "integer",
          "format": "int32",
          "description": "Unique integer id of the import job"
        },
        "importId": {
          "type": "string",
          "description": "Unique integer id of the import job"
        },
        "status": {
          "type": "string",
          "description": "Status of the import job"
        }
      },
      "description": "Response containing import status information"
    },
    "ExportActivityFilter": {
      "type": "object",
      "required": [
        "createdAt"
      ],
      "properties": {
        "activityTypeIds": {
          "type": "array",
          "description": "List of activity type ids to filter on",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "primaryAttributeValueIds": {
          "type": "array",
          "description": "List of primary attribute ids to filter on",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "primaryAttributeValues": {
          "type": "array",
          "description": "List of primary attribute values to filter on",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "description": "Date range to filter new activities on",
          "$ref": "#/definitions/DateRange"
        }
      }
    },
    "Activity": {
      "type": "object",
      "required": [
        "activityDate",
        "activityTypeId",
        "attributes",
        "id",
        "leadId"
      ],
      "properties": {
        "activityDate": {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of the activity"
        },
        "activityTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the activity type"
        },
        "attributes": {
          "type": "array",
          "description": "List of secondary attributes",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "campaignId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the associated Smart Campaign, if applicable"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Integer id of the activity. This value could exceed Int.MAX. For instances which have been migrated to Activity Service, this field may not be present, and should not be treated as unique."
        },
        "leadId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the lead associated to the activity"
        },
        "marketoGUID": {
          "type": "string",
          "description": "Unique id of the activity (128 character string)"
        },
        "primaryAttributeValue": {
          "type": "string",
          "description": "Value of the primary attribute"
        },
        "primaryAttributeValueId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the primary attribute field"
        }
      }
    },
    "Warning": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Integer code of the warning"
        },
        "message": {
          "type": "string",
          "description": "Message describing the warning"
        }
      }
    },
    "Empty": {},
    "ResponseOfExportResponse": {
      "type": "object",
      "required": [
        "errors",
        "requestId",
        "result",
        "success",
        "warnings"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array of errors that occurred if the request was unsuccessful",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "requestId": {
          "type": "string",
          "description": "Id of the request made"
        },
        "result": {
          "type": "array",
          "description": "Array of results for individual records in the operation, may be empty",
          "items": {
            "$ref": "#/definitions/ExportResponse"
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "Whether the request succeeded"
        },
        "warnings": {
          "type": "array",
          "description": "Array of warnings given for the operation",
          "items": {
            "$ref": "#/definitions/Warning"
          }
        }
      }
    },
    "ResponseOfExportResponseWithToken": {
      "type": "object",
      "required": [
        "errors",
        "requestId",
        "result",
        "success",
        "warnings"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array of errors that occurred if the request was unsuccessful",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Paging token given if the result set exceeded the allowed batch size"
        },
        "requestId": {
          "type": "string",
          "description": "Id of the request made"
        },
        "result": {
          "type": "array",
          "description": "Array of results for individual records in the operation, may be empty",
          "items": {
            "$ref": "#/definitions/ExportResponse"
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "Whether the request succeeded"
        },
        "warnings": {
          "type": "array",
          "description": "Array of warnings given for the operation",
          "items": {
            "$ref": "#/definitions/Warning"
          }
        }
      }
    },
    "ObservableOfInputStreamRangeContent": {
      "type": "object"
    },
    "CustomActivityTypeAttribute": {
      "type": "object",
      "required": [
        "apiName",
        "name"
      ],
      "properties": {
        "apiName": {
          "type": "string",
          "description": "API Name of the attribute"
        },
        "dataType": {
          "type": "string",
          "description": "Data type of the attribute",
          "enum": [
            "string",
            "boolean",
            "integer",
            "float",
            "link",
            "email",
            "currency",
            "date",
            "datetime",
            "phone",
            "text"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description of the attribute"
        },
        "isPrimary": {
          "type": "boolean",
          "example": false,
          "description": "Whether the attribute is the primary attribute of the activity type.  There may only be one primary attribute at a time"
        },
        "name": {
          "type": "string",
          "description": "Human-readable display name of the attribute"
        }
      }
    },
    "ResponseOfActivityType": {
      "type": "object",
      "required": [
        "errors",
        "requestId",
        "result",
        "success",
        "warnings"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array of errors that occurred if the request was unsuccessful",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "moreResult": {
          "type": "boolean",
          "example": false,
          "description": "Boolean indicating if there are more results in subsequent pages"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Paging token given if the result set exceeded the allowed batch size"
        },
        "requestId": {
          "type": "string",
          "description": "Id of the request made"
        },
        "result": {
          "type": "array",
          "description": "Array of results for individual records in the operation, may be empty",
          "items": {
            "$ref": "#/definitions/ActivityType"
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "Whether the request succeeded"
        },
        "warnings": {
          "type": "array",
          "description": "Array of warnings given for the operation",
          "items": {
            "$ref": "#/definitions/Warning"
          }
        }
      }
    },
    "ExportResponse": {
      "type": "object",
      "required": [
        "exportId",
        "status"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the export request was created"
        },
        "errorMsg": {
          "type": "string",
          "description": "Error message in case of \"Failed\" status"
        },
        "exportId": {
          "type": "string",
          "description": "Unique id of the export job"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64",
          "description": "Size of exported file in bytes. This will have a value only when status is \"Completed\", otherwise null"
        },
        "fileChecksum": {
          "type": "string",
          "description": "SHA-256 hash of exported file. This will have a value only when status is \"Completed\", otherwise null"
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Finish time of export job. This will have value only when status is \"Completed\" or \"Failed\", otherwise null"
        },
        "format": {
          "type": "string",
          "description": "Format of file as given in the request (\"CSV\", \"TSV\", \"SSV\")"
        },
        "numberOfRecords": {
          "type": "integer",
          "format": "int64",
          "description": "Number of records in the export file.  This will have value only when status is \"Completed\", otherwise null"
        },
        "queuedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Queue time of export job. This will have value when \"Queued\" status is reached, before that null"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of export job. This will have value when \"Processing\" status is reached, before that null"
        },
        "status": {
          "type": "string",
          "description": "Status of the export job (\"Created\",\"Queued\",\"Processing\",\"Canceled\",\"Completed\",\"Failed\")"
        }
      },
      "description": "Response containing export job status information"
    },
    "Reason": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Integer code of the reason"
        },
        "message": {
          "type": "string",
          "description": "Message describing the reason for the status of the operation"
        }
      }
    },
    "ObservableOfInputStreamContent": {
      "type": "object"
    },
    "Token": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the token.  Should be formatted as \"{{my.name}}\""
        },
        "value": {
          "type": "string",
          "description": "Value of the token"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code of the error.  See full list of error codes <a href=\"https://developers.marketo.com/rest-api/error-codes/\">here</a>"
        },
        "message": {
          "type": "string",
          "description": "Message describing the cause of the error"
        }
      }
    },
    "ExportActivityRequest": {
      "type": "object",
      "required": [
        "fields",
        "filter"
      ],
      "properties": {
        "columnHeaderNames": {
          "description": "File header field names override (corresponds with REST API name)",
          "$ref": "#/definitions/ColumnHeaderNames"
        },
        "fields": {
          "type": "array",
          "description": "Array of strings containing field values.  Used to reduce the number of fields contained in export file.  Select one or more of: marketoGUID, leadId, activityDate, activityTypeId, campaignId, primaryAttributeValueId, primaryAttributeValue, actionResult",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "description": "Record selection criteria. \"createAt\" is required, \"activityTypeIds\", \"primaryAttributeValueIds\", and \"primaryAttributeValues\" are optional",
          "$ref": "#/definitions/ExportActivityFilter"
        },
        "format": {
          "type": "string",
          "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
        }
      }
    },
    "ColumnHeaderNames": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "REST API name for header field"
        },
        "value": {
          "type": "string",
          "description": "Value for header field"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "JWT Authorization header"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}